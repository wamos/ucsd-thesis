%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 687.000000 593.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.6.1 (Build 21G217) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 687 593
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 687 593
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /C put
dup 34 /P put
dup 35 /U put
dup 36 /G put
dup 37 /space put
dup 38 /one put
dup 39 /D put
dup 40 /S put
dup 41 /A put
dup 42 /three put
dup 43 /two put
dup 44 /four put
dup 45 /five put
dup 46 /I put
dup 47 /e put
dup 48 /n put
dup 49 /t put
dup 50 /r put
dup 51 /hyphen put
dup 52 /a put
dup 53 /fl put
dup 54 /o put
dup 55 /w put
dup 56 /F put
dup 57 /l put
dup 58 /g put
dup 59 /six put
dup 60 /seven put
dup 61 /b put
dup 62 /R put
dup 63 /s put
dup 64 /u put
dup 65 /O put
dup 66 /uniFB04 put
dup 67 /d put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


10B80001D0B800012FBA001F0003003A111239B8003A10B8003DD0303113153633321E0215140E022322262723061E0233323E0235342627353E0135342E0223220E020733343E0233321615140E022B01222322DA181B20372818192A381F494C025501213E5836325942273F412A38213A4F2E3551361D02551021332236481625311B12050504019548031123332120332313574537563B1E1B365135405E0E02134A3031482E17223C54331F382A1939391C2C1D0F000002001C0000020302C50003000E0051BA0004000000032BB8000410B8000010B80009D0B8000410B8000BD0B8000410B80010DC00B800052FB8000A2FBA0001000800032BB8000110BA0003000A0005111239B80004D0B8000810B8000CD030312523133313112301152115333533350153EEEC025044FEBD01375060F1015BFEA501D4FE3352A6A64B000000010023FFF501FD02B9002B00ADB8002D2FBA0016001700032BB8001610B80002D0B8001610B80004D0B800042FB8002D10B80021DCB8000CDC410500DA000C00EA000C00025D411B0009000C0019000C0029000C0039000C0049000C0059000C0069000C0079000C0089000C0099000C00A9000C00B9000C00C9000C000D5DBA002A0017002111123900BA0011001C00032BB8001110BA0001000000032BB8000110BA0026000700032BB8002610BA002A00070026111239303101352103173E0133321E0215140E0223222E0227231E0333323E0235342E0223220607273701D6FEA2424919412A243B2A171829371E20352717025501243E512E3E5D3E1F243E542F2449170226026E4BFE90041E25182B3B232A3F2A1513232F1B304C331B2742552D3D5B3D1E191A02CC00000000020026FFF5020702C50023003700E3BA001C000900032BB8001C10BA0013002900032BB8001310411B0006001C0016001C0026001C0036001C0046001C0056001C0066001C0076001C0086001C0096001C00A6001C00B6001C00C6001C000D5D410500D5001C00E5001C00025D410500DA002900EA002900025D411B0009002900190029002900290039002900490029005900290069002900790029008900290099002900A9002900B9002900C90029000D5DB8000910B80033DCB8001310B80039DC00BA002E000E00032BB8002E10BA0004002100032BB8000410BA0018002400032BB8001810B8000410B80000DC303101332E0123220E0215141E0233323E0235342E0223220607273E0333321607321E0215140E0223222E0235343E02019E550868584C643C191134604F435B37181E3751333A591E02010E254236333E7A2436241113243523233725141326360210585D406A8949387864402D45542731543E232C3102295E51353AC31A2B3B211F392C19192A3A21213B2B190000010032000001FD02B9000E







00>] def
/CharStrings 36 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/six 8 def
/seven 9 def
/A 10 def
/C 11 def
/D 12 def
/F 13 def
/G 14 def
/I 15 def
/O 16 def
/P 17 def
/R 18 def
/S 19 def
/U 20 def
/a 21 def
/b 22 def
/d 23 def
/e 24 def
/g 25 def
/l 26 def
/n 27 def
/o 28 def
/r 29 def
/s 30 def
/t 31 def
/u 32 def
/w 33 def
/fl 34 def
/uniFB04 35 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2803290573AE82B4E650A7F1EDBD919180C9611EF8E2CB4CB39503D3F7BF90BDE98A387E449B6D91A0AFD14C67777D8ED15858DC3C4DA3F5C4DD9B3F4885B83C47B577D01E92DD58F1A267C66A0E5D138945DD21BC5FBE74F8ED858625F24EFA5E78DA735F8DD370C442807493F9E1934B9E7D850CE90EB230CB3562021980D75C23F054F634D264829659EDBEB811FF5CB93BE6783A796F4B5625CADB69B8E8F5F5FE4B810702D90906465A32579F31A7026A0020012BB9AEC388079B2F7068E1ED2FA0680E589F282FD1AA10829F151DC8EDA24D44AD0A02AF26931544E16A0563EFC26E396D436DEFCBA1C01EC4EE2771D73AF081EEB5E100204D3DA1146C147822647CB9CF765625887C3D1986E8E9E8794EC9884E48F82BF22F3D6BF296148C0975910D90051DDBD9950D360150B46D43DC99171956916A773110D8B238797C638383E6226647A04AC94AB67BCDF5F5A63149DD64F10E319D6558E240CC63C4533AEEDA796E006257C316CB50679327AB47410BCFA76C2427A22CA01AE687D2388C3CCA6D3B81A071F5D05B20A6E453B080DA658E08314ACCBA469CC0044DFDDAF856DC07BFFCBF27CE602000876E4D2CD9DBD677D0E35E634D8F4EA7CBC42A3EF7A4C6822CDBEC9BDE30D8B11F2741905848FD2AD58086D6C84967DF07C180BD2401787AFCAC1236A1ACB28E778A29D86F3ACF691E84FD04D75E2210EA6EA807AB43FEFFE38B410D2E4B3E6C7A7206BED13BD0493B5A8EF86D4CEF7BB6CFE599FDB


67AE30CCC01526253C422A234E7FF00E235005C2348CB4457A4FC9EDA06A5D076FB32E690E0EC37F05DCCA6BDBF15203FDF98221A2CCC640C49CF0DC58D3262C9D117FC9C391A6D6B980436BB8BFAB062E6941F85A20981B5EFE70B40B7E7E6779085810CF93A2882AF9B9342A0FAA73D91B9B68356B211E3BACE2AFF59B9A6B990272597FE7F1EAFDBEF7FFDFDF9434E4F3B79234CD0E11CF18A8BB493F03C5389FC6B17BD3DE5C11B3D7C86C38F9C9FB1B55B811CB0CA45445FCE657D5D5460BA4D6DC9C6F8B7885E297547F36CB32A65011840DB3EB5AEE35F121F4BC2C1E7D815649373AC42B5D1CE9EC526D3FA5ADC9E4540F0C3E47375DEFD043C91C7FDCCA44721DA6A9C5116BAFA7C8F3AD5AA3015EC429C8B9985716288E8A430E6CEC07F9EB6C2ED207D584704082FEE3598C948523106A7B72EF2F35DA95B426BF6C572581F9E462D86477225FF8EAF667FC148219E756C201616E27B8A44135A87A76D875684495E985DD2236E0E38A04A5BC9B732CD76EC09C0A371FFB7D43FC27B9C79F53BE6BF74FCF2110355058BAE3C7B2617EAFC3017DBEB06C085196950017D3892696C9DED19B60A75EE6D5B672B3BBCB03F04A941758FE1CFA78E1F95BDCF31B2155809C4545054E99821BB450B0C178581E587A594DB0C765BA3BD4663D75D6278A545B9949BD67F49BA4333D617C4E90B868AB5192535023FCF31F8A29DC93C87A64BD1DAA4FAC14BD3E1BD74D7259826D2BFA92AEE1E2A628332FDAE9212FA4A08DE344E39563AC9E1E8CAEA5CE7989D601C5133DDB11637C71BAF1683E40AF3FD7192174FC9AC9F6B0E899D0BA79C8D2E21EB42744BAF2F07F2BD40BB58FCEECCFB709218E72C598DBDA33CAAE2C9CC3F5046EAB24C62471E4D73AFCCF72412D20262F9F08AC8B10B4C15549C36B5AF06BFF7C37D3073185AE4166B174A82478AA4FB90E46200AEC55D8E035D0F7FE5804FE3565FBF5A3D36E37ECA0832D38A0661F8C6253492C51878F0CB4EAD43C8423BA1509647A4B102C59DDFF585FFBC663653BB436391B09EF0FD83CFAB87C271384B2B661A7A9901E2791965E3740805F19DFDC7A8611AF7960781940AEBCC26122994D922C1933E9195B6FB6FC67AFCD7B0425392E06C59CDD46248FFE6D9324A03B52E88D2C238291A7025E84730EC03716A43D4DFA75CDEA6782548DB8076CACADE14E40309758797ABB5F223C8837701291039919BE2A20C56D9BE0BC7393F233DDB78565A458590492C6494EC4BE0C00D74759030CBC1CA3926EAB281A1508712C815EBBA1119D6313094060F184EF42BE1191ED6BEEEC92F6F3B2A78B3BBA3A4DA1B5B615A5E5E9A3634F4E26C59C5A265A3D9E1669389D78E0A0A94084D43DB0A4004735591390619A20C331DBDFAFA788AEFE7EF0DC21ED2869C32D70A9B1AE657EE839AF1A


A6BB2EC616B4528A3104040F4E393D6FCAF7F259456D3FB9A97F0AC0F139E7D3BAA221F509009F2801B04AFC49BC8B0AB7AE5AFBC5CDCA350FD8F0593012A3777D2958CF5FD1A404B8B433BF8DB092A5ED4461BADCA785C6407016D354E7F07DC0653C728C40D34901EE69DA3037B9D9277B80E3151B34795CABCB68775EFA66D95889342CF4B14126BB5A3A976C1EC3BD7D68E8171CADED279B915CE6A998ED79F85D98F0D7007B14E3B716A14ECC5C6B00A56D0A5C132BCB0AE79806E8F46E976125CD91AC4DCD7AD250C31084070942A63DE3A4FC53885B29015FF2E10572A45C37DD5C0E3EB6AA90DEE9D45B4EA6172FF5CCDEC1BCABFFD09CC7D8E9E99B52BFEAB9F5C1806AA64C4F00784BE0ACDC9E3B8A639DC3281FE213FBE014B9744CC2DCCBC46CAB54338A949CF648EF223E270F6B69E2AB811070A6132BE442410750F51E32EA899D6409285FE547B7BDE1011A2F60DBDD86D477C448997532ABD6D4B81DE420F8C459B0F6572F764038A938D6617A30AB0127700087B21EC978DB3AA20553B2FFFC4100FBD7570E02C094371E71335B33D4CB40495DDE85F6857A18952AB9F9F4140501AB4CAE94EE3E82BFD27A53843E779F002094CC3B2645267A5501AE41590A312AD1398AF2F1E984547C9129048A8F1F1D6F129D4BD4A26C33135D3B583AD91533851BB71D4A6FD268103F454EE7EA4F33184255A47F3CB50335D4E027875FE18554D74D647D5C34DC507EC8C63DBA4BAF53AE6A097AAE3B02F704577F3737BD4112DBFB315B64E71738BF1488399B947B808A6C14C9062DF811753AB9EFA9130EA1FF2BE2969B27B39EBCF461F6D1129AFF8B20F5C12F4E7E9F3037E32FFA65344A2DE71F29C96953C22DB8837DC0B5B1B0707BBB38595161819007A271BEA6532FE5911B362892BAA10738D3B4D996F022E023B85FCBD8ABE0A5FA29C5DB370F18CCA5DD1CC03C32347056BF5D5C27A0FC70934C7AA917E31F5F217F84E4D86473EC2F52196B5131E920851690714587E8AF5694CE760B15D9605CDAC2CA9884B6207B0F3CF9DFC0EDF4D23C367F177A1EDCA0ABCBA3A89070606BD2471837D2B144F9E61D284F86B0812AA7A1BD4BE3FFCE6B0C531925A9F1293E4BAC6DD0E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 687 593 rc
1 0 0 -1 -2247 3081 cm
2460 2499.0234 m
2280 2499.0234 l
2280 2559.0234 l
2460 2559.0234 l
h
2460 2499.0234 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
2353.2639 2554.5754 m
(!"#)[ 11.552000 10.368000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
2460 2639.5 m
2280 2639.5 l
2280 2759.5 l
2460 2759.5 l
h
2460 2639.5 m
S
/Cs2 SC
0 sc
0 i
2346.2959 2755.052 m
($"#%&)[ 12.144000 10.368000 11.552000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
CM
123 431.625 m
43 431.625 l
43 391.625 l
123 391.625 l
h
123 431.625 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2370 2649.375 m
2290 2649.375 l
2290 2689.375 l
2370 2689.375 l
h
2370 2649.375 m
S
/Cs2 SC
0 sc
0 i
2307.3279 2684.927 m
('\(\)%&)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
CM
203 431.625 m
123 431.625 l
123 391.625 l
203 391.625 l
h
203 431.625 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2450 2649.375 m
2370 2649.375 l
2370 2689.375 l
2450 2689.375 l
h
2450 2649.375 m
S
/Cs2 SC
0 sc
0 i
2387.3279 2684.927 m
('\(\)%*)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
CM
203 383.875 m
43 383.875 l
43 343.875 l
203 343.875 l
h
203 383.875 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2450 2697.125 m
2290 2697.125 l
2290 2737.125 l
2450 2737.125 l
h
2450 2697.125 m
S
/Cs2 SC
0 sc
0 i
2347.3279 2732.677 m
('\(\)%+)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
2280.7461 2713.5986 m
2271.9321 2709.7256 2260 2702.9065 2260 2694.375 c
2260 2680.8472 2290 2669.375 2290 2669.375 c
S
0 i
CM
41.224533 364.55154 m
34.817123 370.20355 l
32.680649 364.5968 l
h
41.224533 364.55154 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2288.2246 2716.4485 m
2281.8171 2710.7964 l
2279.6807 2716.4031 l
h
2288.2246 2716.4485 m
S
1 J
1 j
0.60000002 i
2693 2639.5 m
2513 2639.5 l
2513 2759.5 l
2693 2759.5 l
h
2693 2639.5 m
S
/Cs2 SC
0 sc
0 i
2579.2959 2755.052 m
($"#%+)[ 12.144000 10.368000 11.552000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
CM
436 429.875 m
276 429.875 l
276 389.875 l
436 389.875 l
h
436 429.875 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2683 2651.125 m
2523 2651.125 l
2523 2691.125 l
2683 2691.125 l
h
2683 2651.125 m
S
/Cs2 SC
0 sc
0 i
2580.3279 2686.677 m
('\(\)%,)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705884 0.64705884 0.64705884 sc
CM
436 389.875 m
276 389.875 l
276 349.875 l
436 349.875 l
h
436 389.875 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2683 2691.125 m
2523 2691.125 l
2523 2731.125 l
2683 2731.125 l
h
2683 2691.125 m
S
/Cs2 SC
0 sc
0 i
2580.3279 2726.677 m
('\(\)%-)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
2458.3062 2674.761 m
2463.4187 2678.8142 2469 2684.918 2469 2692.25 c
2469 2705.7778 2450 2717.125 2450 2717.125 c
S
0 i
CM
204.59418 410.59128 m
209.67433 403.72162 l
212.93872 408.75589 l
h
204.59418 410.59128 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2451.5942 2670.4087 m
2456.6743 2677.2783 l
2459.9387 2672.2441 l
h
2451.5942 2670.4087 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
2598.6948 2646.3582 m
2579.6082 2639.7468 2534.1021 2625.7363 2490 2625.25 c
2432.2058 2624.6125 2404 2647.5 2404 2647.5 c
S
0 i
CM
359.2149 431.90073 m
352.72614 437.45914 l
350.67126 431.82199 l
h
359.2149 431.90073 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2606.2148 2649.0994 m
2599.7261 2643.5408 l
2597.6711 2649.178 l
h
2606.2148 2649.0994 m
S
2.5 w
1 J
1 j
0.60000002 i
2660 2599.125 m
2280 2599.25 l
S
2369.5 2598.3984 m
2369.5012 2639.5 l
S
2602.5 2598.3984 m
2602.5012 2639.5 l
S
2 w
[
16
8
2
8
] 0 d
0 0.36078432 0.36470589 sc
2314.9951 2629.5071 m
2309.3674 2622.6279 2303.1543 2612.5115 2303 2601.25 c
2302.7168 2580.5688 2323 2565.75 2323 2565.75 c
S
0 i
CM
74.697189 444.61368 m
70.57666 454.00204 l
65.419518 448.97772 l
h
74.697189 444.61368 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2321.6973 2636.3862 m
2317.5767 2626.998 l
2312.4194 2632.0222 l
h
2321.6973 2636.3862 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0.69411767 0 0.10980392 sc
2340.0049 2572.9929 m
2345.6326 2579.8721 2351.8457 2589.9885 2352 2601.25 c
2352.2832 2621.9312 2332 2636.75 2332 2636.75 c
S
0 i
CM
86.302811 514.88629 m
90.42334 505.49796 l
95.580482 510.52228 l
h
86.302811 514.88629 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2333.3027 2566.1138 m
2337.4233 2575.502 l
2342.5806 2570.4778 l
h
2333.3027 2566.1138 m
S
1 w
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
2686 2718.875 m
2686 2718.875 2702.79 2604.5164 2602.5 2581.25 c
2516.0195 2561.1873 2377.5486 2616.9929 2341.0547 2632.7417 c
S
0 i
CM
86.737381 445.01907 m
95.267036 445.51413 l
92.838333 451.00058 l
h
86.737381 445.01907 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2333.7373 2635.981 m
2342.2671 2635.4858 l
2339.8384 2629.9995 l
h
2333.7373 2635.981 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
2518.7461 2715.3486 m
2509.9321 2711.4756 2498 2704.6565 2498 2696.125 c
2498 2682.5972 2528 2671.125 2528 2671.125 c
S
0 i
CM
279.22455 362.80154 m
272.81711 368.45355 l
270.68066 362.8468 l
h
279.22455 362.80154 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2526.2246 2718.1985 m
2519.8171 2712.5464 l
2517.6807 2718.1531 l
h
2526.2246 2718.1985 m
S
1 1 1 sc
CM
557.5 581.97662 m
518.5 581.97662 l
518.5 561.97662 l
557.5 561.97662 l
h
557.5 581.97662 m
f
Q
/Cs2 SC
0 sc
0 i
q
518.5 561.97662 39 20 rc
1 0 0 -1 -2247 3081 cm
/F1.1[ 16 0 0 -16 0 0]sf
2766.5 2514.7993 m
("!./)[ 10.368000 11.552000 4.144000 0.000000 ] xS
Q
2.5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 687 593 rc
1 0 0 -1 -2247 3081 cm
2750.75 2508.5234 m
2720.75 2508.5234 l
S
2 w
[
8
8
] 0 d
2839.25 2508.5234 m
2819.25 2508.5234 l
S
0 i
1 1 1 sc
CM
687 592.97662 m
602.5 592.97662 l
602.5 561.97662 l
687 561.97662 l
h
687 592.97662 m
f
Q
/Cs2 SC
0 sc
0 i
q
602.5 561.97662 84.5 31 rc
1 0 0 -1 -2247 3081 cm
/F1.1[ 16 0 0 -16 0 0]sf
2850.5 2500.0754 m
(.01/23'\(\)%)[ 4.144000 8.896000 5.040000 8.592000 4.448000 6.224000 11.264000 10.368000 10.368000 0.000000 ] xS
2850.5 2518.5234 m
('414%567)[ 11.264000 8.592000 5.040000 8.592000 4.448000 8.288000 9.184000 0.000000 ] xS
Q
1 w
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 687 593 rc
1 0 0 -1 -2247 3081 cm
2461.2515 2957.375 m
2281.2515 2957.375 l
2281.2515 3077.375 l
2461.2515 3077.375 l
h
2461.2515 2957.375 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
2354.2195 3072.927 m
($"#)[ 12.144000 10.368000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
124.25147 113.75 m
44.251469 113.75 l
44.251469 73.75 l
124.25147 73.75 l
h
124.25147 113.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2371.2515 2967.25 m
2291.2515 2967.25 l
2291.2515 3007.25 l
2371.2515 3007.25 l
h
2371.2515 2967.25 m
S
/Cs2 SC
0 sc
0 i
2308.5796 3002.802 m
('\(\)%&)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
204.25146 113.75 m
124.25147 113.75 l
124.25147 73.75 l
204.25146 73.75 l
h
204.25146 113.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2451.2515 2967.25 m
2371.2515 2967.25 l
2371.2515 3007.25 l
2451.2515 3007.25 l
h
2451.2515 2967.25 m
S
/Cs2 SC
0 sc
0 i
2388.5796 3002.802 m
('\(\)%*)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
204.25146 66 m
44.251469 66 l
44.251469 26 l
204.25146 26 l
h
204.25146 66 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2451.2515 3015 m
2291.2515 3015 l
2291.2515 3055 l
2451.2515 3055 l
h
2451.2515 3015 m
S
/Cs2 SC
0 sc
0 i
2348.5796 3050.552 m
('\(\)%+)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
2281.9976 3031.4736 m
2273.1836 3027.6006 2261.2515 3020.7815 2261.2515 3012.25 c
2261.2515 2998.7222 2291.2515 2987.25 2291.2515 2987.25 c
S
0 i
CM
42.476006 46.676548 m
36.068592 52.328548 l
33.932121 46.721813 l
h
42.476006 46.676548 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2289.4761 3034.3235 m
2283.0686 3028.6714 l
2280.9321 3034.2781 l
h
2289.4761 3034.3235 m
S
1 J
1 j
0.60000002 i
2694.2515 2957.375 m
2514.2515 2957.375 l
2514.2515 3077.375 l
2694.2515 3077.375 l
h
2694.2515 2957.375 m
S
/Cs2 SC
0 sc
0 i
2583.2195 3072.927 m
(8"$\))[ 9.184000 10.368000 12.144000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
437.25146 112 m
277.25146 112 l
277.25146 72 l
437.25146 72 l
h
437.25146 112 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2684.2515 2969 m
2524.2515 2969 l
2524.2515 3009 l
2684.2515 3009 l
h
2684.2515 2969 m
S
/Cs2 SC
0 sc
0 i
2581.5796 3004.552 m
('\(\)%,)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
437.25146 72 m
277.25146 72 l
277.25146 32 l
437.25146 32 l
h
437.25146 72 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2684.2515 3009 m
2524.2515 3009 l
2524.2515 3049 l
2684.2515 3049 l
h
2684.2515 3009 m
S
/Cs2 SC
0 sc
0 i
2581.5796 3044.552 m
('\(\)%-)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
2459.5576 2992.636 m
2464.6702 2996.6892 2470.2515 3002.793 2470.2515 3010.125 c
2470.2515 3023.6528 2451.2515 3035 2451.2515 3035 c
S
0 i
CM
205.84566 92.716278 m
210.9258 85.846626 l
214.19019 90.88089 l
h
205.84566 92.716278 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2452.8457 2988.2837 m
2457.9258 2995.1533 l
2461.1902 2990.1191 l
h
2452.8457 2988.2837 m
S
2.5 w
1 J
1 j
0.60000002 i
2922.5 2917 m
2252.5 2917.125 l
S
2370.7515 2916.2734 m
2370.7527 2957.375 l
S
2603.7515 2916.2734 m
2603.7527 2957.375 l
S
1 w
[
4
4
] 0 d
2519.9976 3033.2236 m
2511.1836 3029.3506 2499.2515 3022.5315 2499.2515 3014 c
2499.2515 3000.4722 2529.2515 2989 2529.2515 2989 c
S
0 i
CM
280.47601 44.926548 m
274.0686 50.578548 l
271.93213 44.971813 l
h
280.47601 44.926548 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2527.4761 3036.0735 m
2521.0686 3030.4214 l
2518.9321 3036.0281 l
h
2527.4761 3036.0735 m
S
2.5 w
1 J
1 j
0.60000002 i
2330 2559.0234 m
2330.0012 2600.125 l
S
1 w
2461.2515 2817.625 m
2281.2515 2817.625 l
2281.2515 2877.625 l
2461.2515 2877.625 l
h
2461.2515 2817.625 m
S
/Cs2 SC
0 sc
0 i
2354.5154 2873.177 m
(!"#)[ 11.552000 10.368000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
2808.375 2960.3984 m
2718.375 2960.3984 l
2718.375 3080.3984 l
2808.375 3080.3984 l
h
2808.375 2960.3984 m
S
/Cs2 SC
0 sc
0 i
2738.4871 3075.9504 m
(\)0496:)[ 10.368000 8.896000 8.592000 3.552000 9.184000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
2913 2960.125 m
2823 2960.125 l
2823 3080.125 l
2913 3080.125 l
h
2913 2960.125 m
S
/Cs2 SC
0 sc
0 i
2849.7839 3075.677 m
(\)\(.!)[ 10.368000 10.368000 4.144000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
550 111.5625 m
480 111.5625 l
480 31.5625 l
550 31.5625 l
h
550 111.5625 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2797 2969.4375 m
2727 2969.4375 l
2727 3049.4375 l
2797 3049.4375 l
h
2797 2969.4375 m
S
/Cs2 SC
0 sc
0 i
2739.3279 3044.9895 m
('\(\)%;)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
655.49854 111.5625 m
585.49854 111.5625 l
585.49854 31.5625 l
655.49854 31.5625 l
h
655.49854 111.5625 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2902.4985 2969.4375 m
2832.4985 2969.4375 l
2832.4985 3049.4375 l
2902.4985 3049.4375 l
h
2902.4985 2969.4375 m
S
/Cs2 SC
0 sc
0 i
2844.8264 3044.9895 m
('\(\)%<)[ 11.264000 10.368000 10.368000 4.448000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
45.457203 488.44604 m
51.510357 484.54083 51.510357 478.20917 45.457203 474.30396 c
39.404079 470.39868 29.590038 470.39868 23.536917 474.30396 c
17.483763 478.20917 17.483763 484.54083 23.536917 488.44604 c
29.590038 492.35132 39.404079 492.35132 45.457203 488.44604 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2292.4573 2592.554 m
2298.5103 2596.4592 2298.5103 2602.7908 2292.4573 2606.696 c
2286.4041 2610.6013 2276.5901 2610.6013 2270.5369 2606.696 c
2264.4836 2602.7908 2264.4836 2596.4592 2270.5369 2592.554 c
2276.5901 2588.6487 2286.4041 2588.6487 2292.4573 2592.554 c
S
/Cs2 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
2274.939 2603.625 m
(&4)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
139.21161 488.88541 m
145.26477 485.56595 145.26477 480.18405 139.21161 476.86459 c
133.15849 473.54514 123.34445 473.54514 117.29133 476.86459 c
111.23817 480.18405 111.23817 485.56595 117.29133 488.88541 c
123.34445 492.20486 133.15849 492.20486 139.21161 488.88541 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2386.2117 2592.1145 m
2392.2646 2595.4341 2392.2646 2600.8159 2386.2117 2604.1355 c
2380.1584 2607.4548 2370.3445 2607.4548 2364.2913 2604.1355 c
2358.2383 2600.8159 2358.2383 2595.4341 2364.2913 2592.1145 c
2370.3445 2588.7952 2380.1584 2588.7952 2386.2117 2592.1145 c
S
/Cs2 SC
0 sc
0 i
2368.3574 2603.175 m
(&=)[ 6.672000 0.000000 ] xS
2 w
[
16
8
2
8
] 0 d
0.60000002 i
/Cs1 SC
0 0.36078399 0.36470601 sc
2279.0803 2943.6895 m
2273.4297 2936.6929 2267.1541 2926.3857 2266.9985 2914.9883 c
2266.7144 2894.1621 2286.9985 2879.4883 2286.9985 2879.4883 c
S
0 i
CM
38.718365 130.38274 m
34.675961 139.80499 l
29.477261 134.82368 l
h
38.718365 130.38274 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2285.7183 2950.6172 m
2281.676 2941.1951 l
2276.4773 2946.1763 l
h
2285.7183 2950.6172 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
2297.6292 2887.8679 m
2303.2568 2894.7471 2309.47 2904.8635 2309.6243 2916.125 c
2309.9075 2936.8062 2289.6243 2951.625 2289.6243 2951.625 c
S
0 i
CM
43.927078 200.01131 m
48.0476 190.62294 l
53.20475 195.64726 l
h
43.927078 200.01131 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2290.927 2880.9888 m
2295.0476 2890.377 l
2300.2048 2885.3528 l
h
2290.927 2880.9888 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0 0.36078399 0.36470601 sc
2495.7124 2958.718 m
2485.4302 2954.6152 2470.9307 2946.7898 2461.2515 2933 c
2444.8198 2909.5903 2450.0059 2880 2450.0059 2880 c
S
0 i
CM
257.86133 119.37 m
249.80533 125.71199 l
247.62166 118.85111 l
h
257.86133 119.37 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2504.8613 2961.6299 m
2496.8054 2955.2881 l
2494.6216 2962.1489 l
h
2504.8613 2961.6299 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
2462.0771 2881.1873 m
2475.3135 2883.1458 2495.6985 2888.3242 2508.0059 2902 c
2527.3831 2923.5312 2517.6257 2956 2517.6257 2956 c
S
0 i
CM
205.5153 200.69632 m
214.74329 196.22816 l
215.40585 203.39761 l
h
205.5153 200.69632 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2452.5154 2880.3037 m
2461.7434 2884.7717 l
2462.4058 2877.6023 l
h
2452.5154 2880.3037 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0 0.36078399 0.36470601 sc
2715.1108 2951.9941 m
2632 2917 l
2461.2515 2847.625 l
S
0 i
CM
476.95862 125.28059 m
469.5079 132.32382 l
466.7139 125.68805 l
h
476.95862 125.28059 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2723.9585 2955.7195 m
2716.5078 2948.6763 l
2713.7139 2955.312 l
h
2723.9585 2955.7195 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
2474.1396 2845.1887 m
2507.8809 2844.1265 2600.3801 2843.8728 2661 2869.25 c
2736.2878 2900.7676 2727 2957 2727 2957 c
S
0 i
CM
217.54834 235.39359 m
227.2959 232.21471 l
226.9826 239.4079 l
h
217.54834 235.39359 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2464.5483 2845.6064 m
2474.2959 2848.7854 l
2473.9827 2841.592 l
h
2464.5483 2845.6064 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0 0.36078399 0.36470601 sc
2851.0154 2949.4167 m
2843.4922 2925.5876 2817.8853 2873.5205 2734 2843.8398 c
2622.7324 2804.4705 2461.2515 2823 2461.2515 2823 c
S
0 i
CM
606.23639 122.24568 m
607.51727 132.41817 l
600.5127 130.75211 l
h
606.23639 122.24568 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2853.2363 2958.7544 m
2854.5173 2948.5818 l
2847.5127 2950.2478 l
h
2853.2363 2958.7544 m
S
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
2473.8218 2820.1074 m
2518.1868 2810.3708 2669.8245 2781.1538 2764 2813.375 c
2875.2676 2851.4441 2854 2957.375 2854 2957.375 c
S
0 i
CM
217.46742 258.74002 m
227.63023 257.38452 l
226.01562 264.40115 l
h
217.46742 258.74002 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -2247 3081 cm
2464.4675 2822.26 m
2474.6301 2823.6155 l
2473.0156 2816.5989 l
h
2464.4675 2822.26 m
S
1 1 1 sc
CM
27.585878 155.32106 m
33.63903 151.41582 33.63903 145.08418 27.585878 141.17894 c
21.532757 137.27368 11.718714 137.27368 5.6655922 141.17894 c
-0.3875609 145.08418 -0.3875609 151.41582 5.6655922 155.32106 c
11.718714 159.22632 21.532757 159.22632 27.585878 155.32106 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2274.5859 2925.679 m
2280.6389 2929.5842 2280.6389 2935.9158 2274.5859 2939.821 c
2268.5327 2943.7263 2258.7188 2943.7263 2252.6655 2939.821 c
2246.6125 2935.9158 2246.6125 2929.5842 2252.6655 2925.679 c
2258.7188 2921.7737 2268.5327 2921.7737 2274.5859 2925.679 c
S
/Cs2 SC
0 sc
0 i
2257.0676 2936.75 m
(&4)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
77.458672 185.82106 m
83.511826 181.91582 83.511826 175.58418 77.458672 171.67894 c
71.405548 167.77368 61.591507 167.77368 55.538387 171.67894 c
49.485233 175.58418 49.485233 181.91582 55.538387 185.82106 c
61.591507 189.72632 71.405548 189.72632 77.458672 185.82106 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2324.4587 2895.179 m
2330.5117 2899.0842 2330.5117 2905.4158 2324.4587 2909.321 c
2318.4055 2913.2263 2308.5916 2913.2263 2302.5383 2909.321 c
2296.4854 2905.4158 2296.4854 2899.0842 2302.5383 2895.179 c
2308.5916 2891.2737 2318.4055 2891.2737 2324.4587 2895.179 c
S
/Cs2 SC
0 sc
0 i
2306.6045 2906.25 m
(&=)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
274.46014 185.82106 m
280.51331 181.91582 280.51331 175.58418 274.46014 171.67894 c
268.40701 167.77368 258.59299 167.77368 252.53986 171.67894 c
246.48671 175.58418 246.48671 181.91582 252.53986 185.82106 c
258.59299 189.72632 268.40701 189.72632 274.46014 185.82106 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2521.4602 2895.179 m
2527.5132 2899.0842 2527.5132 2905.4158 2521.4602 2909.321 c
2515.407 2913.2263 2505.593 2913.2263 2499.5398 2909.321 c
2493.4868 2905.4158 2493.4868 2899.0842 2499.5398 2895.179 c
2505.593 2891.2737 2515.407 2891.2737 2521.4602 2895.179 c
S
/Cs2 SC
0 sc
0 i
2503.606 2906.25 m
(+=)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
220.64948 155.32106 m
226.70264 151.41582 226.70264 145.08418 220.64948 141.17894 c
214.59636 137.27368 204.78232 137.27368 198.7292 141.17894 c
192.67604 145.08418 192.67604 151.41582 198.7292 155.32106 c
204.78232 159.22632 214.59636 159.22632 220.64948 155.32106 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2467.6494 2925.679 m
2473.7026 2929.5842 2473.7026 2935.9158 2467.6494 2939.821 c
2461.5964 2943.7263 2451.7822 2943.7263 2445.7292 2939.821 c
2439.676 2935.9158 2439.676 2929.5842 2445.7292 2925.679 c
2451.7822 2921.7737 2461.5964 2921.7737 2467.6494 2925.679 c
S
/Cs2 SC
0 sc
0 i
2450.1313 2936.75 m
(+4)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
413.71307 154.44606 m
419.76624 150.54082 419.76624 144.20918 413.71307 140.30394 c
407.65997 136.39868 397.84592 136.39868 391.79279 140.30394 c
385.73965 144.20918 385.73965 150.54082 391.79279 154.44606 c
397.84592 158.35132 407.65997 158.35132 413.71307 154.44606 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2660.7131 2926.554 m
2666.7664 2930.4592 2666.7664 2936.7908 2660.7131 2940.696 c
2654.6599 2944.6013 2644.8459 2944.6013 2638.7927 2940.696 c
2632.7397 2936.7908 2632.7397 2930.4592 2638.7927 2926.554 c
2644.8459 2922.6487 2654.6599 2922.6487 2660.7131 2926.554 c
S
/Cs2 SC
0 sc
0 i
2643.1948 2937.625 m
(*4)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
471.46161 189.44606 m
477.51477 185.54082 477.51477 179.20918 471.46161 175.30394 c
465.40848 171.39868 455.59445 171.39868 449.54132 175.30394 c
443.48816 179.20918 443.48816 185.54082 449.54132 189.44606 c
455.59445 193.35132 465.40848 193.35132 471.46161 189.44606 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2718.4617 2891.554 m
2724.5146 2895.4592 2724.5146 2901.7908 2718.4617 2905.696 c
2712.4084 2909.6013 2702.5945 2909.6013 2696.5413 2905.696 c
2690.4883 2901.7908 2690.4883 2895.4592 2696.5413 2891.554 c
2702.5945 2887.6487 2712.4084 2887.6487 2718.4617 2891.554 c
S
/Cs2 SC
0 sc
0 i
2700.6074 2902.625 m
(*=)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
563.88373 155.32106 m
569.93689 151.41582 569.93689 145.08418 563.88373 141.17894 c
557.83063 137.27368 548.01654 137.27368 541.96344 141.17894 c
535.91028 145.08418 535.91028 151.41582 541.96344 155.32106 c
548.01654 159.22632 557.83063 159.22632 563.88373 155.32106 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2810.8838 2925.679 m
2816.9368 2929.5842 2816.9368 2935.9158 2810.8838 2939.821 c
2804.8306 2943.7263 2795.0166 2943.7263 2788.9634 2939.821 c
2782.9104 2935.9158 2782.9104 2929.5842 2788.9634 2925.679 c
2795.0166 2921.7737 2804.8306 2921.7737 2810.8838 2925.679 c
S
/Cs2 SC
0 sc
0 i
2793.3655 2936.75 m
(,4)[ 6.672000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
602.46014 185.82106 m
608.51331 181.91582 608.51331 175.58418 602.46014 171.67894 c
596.40704 167.77368 586.59296 167.77368 580.53986 171.67894 c
574.48669 175.58418 574.48669 181.91582 580.53986 185.82106 c
586.59296 189.72632 596.40704 189.72632 602.46014 185.82106 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -2247 3081 cm
2849.4602 2895.179 m
2855.5132 2899.0842 2855.5132 2905.4158 2849.4602 2909.321 c
2843.407 2913.2263 2833.593 2913.2263 2827.5398 2909.321 c
2821.4868 2905.4158 2821.4868 2899.0842 2827.5398 2895.179 c
2833.593 2891.2737 2843.407 2891.2737 2849.4602 2895.179 c
S
/Cs2 SC
0 sc
0 i
2831.606 2906.25 m
(,=)[ 6.672000 0.000000 ] xS
2 w
[
16
8
2
8
] 0 d
0.60000002 i
/Cs1 SC
0 0.36078432 0.36470589 sc
2750.3472 2539.25 m
2720.3472 2539.25 l
S
0.69411767 0 0.10980392 sc
2844.25 2539.25 m
2814.25 2539.25 l
S
0 i
1 1 1 sc
CM
675.5 554 m
602.5 554 l
602.5 534 l
675.5 534 l
h
675.5 554 m
f
Q
/Cs2 SC
0 sc
0 i
q
602.5 534 73 20 rc
1 0 0 -1 -2247 3081 cm
/F1.1[ 16 0 0 -16 0 0]sf
2850.5 2542.7759 m
(%>/?@91)[ 4.448000 10.960000 8.592000 8.000000 8.896000 3.552000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 687 593 rc
580 551.25 m
516 551.25 l
516 531.25 l
580 531.25 l
h
580 551.25 m
f
Q
/Cs2 SC
0 sc
q
516 531.25 64 20 rc
1 0 0 -1 -2247 3081 cm
/F1.1[ 16 0 0 -16 0 0]sf
2764 2545.5259 m
(AB64C)[ 12.160000 12.784000 9.184000 8.592000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
