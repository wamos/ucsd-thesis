%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 561.000000 189.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.6.1 (Build 21G217) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 561 189
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 561 189
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /e put
dup 35 /n put
dup 36 /d put
dup 37 /r put
dup 38 /C put
dup 39 /X put
dup 40 /L put
dup 41 /space put
dup 42 /I put
dup 43 /slash put
dup 44 /F put
dup 45 /R put
dup 46 /c put
dup 47 /i put
dup 48 /v put
dup 49 /w put
dup 50 /t put
dup 51 /h put
dup 52 /E put
dup 53 /P put
dup 54 /B put
dup 55 /a put
dup 56 /k put
dup 57 /p put
dup 58 /s put
dup 59 /u put
dup 60 /D put
dup 61 /o put
dup 62 /g put
dup 63 /y put
dup 64 /b put
dup 65 /N put
dup 66 /fi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



02171E0317332E03272E0327353E013534262303233533321615140E024E5FE8232A1A0C04050202070A6A0F0F080202030B17271F413B73662BC6EC433C1B2D3C02CAFD36013115232F1A1A362F260B122F34361A1A30271C06021262415764FEB7F9443627311D0A00000000010025FFF0026302DB0039008DBA001E001F00032BB8001E10BA0029001400032BB8002910B8001E10B8000BDC410500DA001400EA001400025D411B0009001400190014002900140039001400490014005900140069001400790014008900140099001400A9001400B9001400C90014000D5DB80032DCB8002910B8003BDC00BA0019002400032BB8001910BA0006003700032BB8000610303101332E0323220E0215141E0615140E0223222E023523141E0233323E0235342E0635343E0233321601EB5A0229475E37315D492C2741525552412720344120284C39235A2F516B3C31635033274152555241271B2D3A1E4A5F01F93B55381A19334F363141291913121D2E2527321D0C142A412D415F3D1E1733513935462E1B14111A2921232F1C0C45000000000100000000026402CA000B002700B800072FB8000A2FB800012FB800042FBA000300010007111239BA00090001000711123930311303331B01330313230B0123F8F86AC6C074FBEC6ABAB272016FFE910127FED9016F015BFEE9011700000000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D12




00DE004502070045022C0040023E002402510043014D003D01F4001F013B0009022C004001F4000E02F6001101F400080206000C000000480048005E0122019001F8022A02560270029002D0033803C8045C048C0596062E06A0073E07A6085808AA08D40906094E09EE0A860AB40B580BAA0BFA0C1A0C540CBE0D380001000000230096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/slash 2 def
/B 3 def
/C 4 def
/D 5 def
/E 6 def
/F 7 def
/I 8 def
/L 9 def
/N 10 def
/P 11 def
/R 12 def
/S 13 def
/X 14 def
/a 15 def
/b 16 def
/c 17 def
/d 18 def
/e 19 def
/g 20 def
/h 21 def
/i 22 def
/k 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/v 31 def
/w 32 def
/y 33 def
/fi 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28031C17829BEE98293CCF96BAF13971F3C4CDD5E6FE2DD02A8EDB11D8D36D558DE1A8793F5801ACADF6DCD2C324074E2DFF3E44C987DFABBA3EF15CC66522724D979F33E79788477D680C031A6B9957354E36D4B9A5E6FE0BFB34D832008C465A5D67ECE663FBA51E0D2CE079366F2937177FD22DCD30117792698D727D37AE1F9561C814719ADC973306D8C643B499CC01DFE018A846BA1B1DAAFB99E9884F3F30DB2805B0906DEF0EDE1FFC4A8EB869C3D77CE184843337515B516B7C76218EB669795916B7F3A5AF21A3C574C60A1E13F4B5B0E4DF72DF8C8E843F554FC6D702303DAE2AC76045AC058F646FAE0457797F1ED15EB2C9217A846367147E71783823E8077F2197AE99F4B44420F5A42EF248383D4FCDD828812BB11155D73759EAFB80EF77D47825BB3DDFCD044ECB4496AB6CE7FD7F224F07AD14648C216C99872EE84C2551B1BA55621BD86115D10D3538576F5AB371B358510742DD785682199F153490FCE4EDE0B583227B90A01680802828A8B0A1CCD395E6C4998F5484D527DE9D17AFEF1A0B29BFB69AEC554EB5A41EBC793C0841EC8F710D3BA6726D9185118D362EC9F08E003C392D49927590DEE4C6441E0008469B194E90377FC5427EBE12578E871CDE198A9EC2ACA905743346707C88B820085E5AE2E5608DE3E8EDF9DE84E68B9875C36059A4A61C43B370E66E438F1660AFF1932370CD610E73D7EECAFAD83D757E1196C8E4E8A4F9AEB169399898C14D37A7DAC0DD7140AAE4B3764
56AAE8E5510B3B243D28CAE2654A6828B13F6E24C3289EAC599109CDA3632BEC77C4E721C8E507B77A73F9FD16E263378F5FCB7E2420487484DE4033626D6BABBF2B2F997B040F2916CF64A55420081067BC3E65A99DC3BFB3E59D9C7AF531A00ECF5906A25501F2AE90E06EA6273FB6D6A7F889A837E2A1ADACFB001820B516C6CF9B9AECFEB398A0C02CEF6C6468908AC376BAFE49CD51EE3E5338E12E582388B3A900CE7F2696B4E63619ECC2940D9057A90A97AC95284EA4B2B44000CCFE59929ED7EE52C0DD76E09AC5473FED311225FCE1C7BB3ECBE4B2CD5ABE88C7953A1B19E9A584990DDC703327E66B07451E6A75DD1C6107D80F06D3C836C24FA247058B3CB50E747B9511C4B803C92CFC9F6404CD225C4D2081D9A7FBCAC0A1BCFF7DE282B5DE1436D22DF51D17F5AC1D14816BB941FEBCAE6CC0E35E64598C07278F3A0C52714023BD9DA93A17DE217DC810DFDE8875DF47CC9E4752CFEAFE4862E6787F8AC5FCB893231C87E167102CB0ABC575F875EC629E339D156099056B2AB91102D9FF2AA9D706E4961A68CA18E178701D3DC3CF99FF236945172AD631AFE0BC38C6679E04E6128DFE9838F6CF3ED256CF2C3D449C15D9CACAE4D23DBD53DA04E25BB14317843B8892593F9140DFB19461402CB853BFEB4418E073DB7D8665F3D6287D5DB06CBD1DAF417FA8D44DBC165C213899AF7C313E263F5FDD5B607E8F1195582789396B05A8EF973E84AAB5FAD1ABAF60E02812891802D139F4571CDCDFF5402AF9B2A9BFBFA10A4AFF157FBA7ABE37E067C562D0892F4A78D0B4313089B1C4A665792AAD0D3112BA211854410743281AE71878839FFE1319F20D7C8093CDED9A9965B7860FE8A0B71640CEB526EF78C3C8397606B639B8ABE2E548DA4B7B163BA3E80D8758A8BC29EB4AAC11B992B7C56DB2BFE452283BD569823E6091FFB036CC2738513DB09DD67963B2C43E2019B60B6F9BFE5B02F3A8DD568741D526A478A7C4B6154CB90C6BF98E3B32FA22AADE4A6FD10DAAC1963F463386984BCBCCEDDD4F28BC63E81E8804728D89AF33AF9E7551EA689603B21C75A6BBFB30B14BAA53215FC8171E9863CC5F18CB18B5411222F53BB806BE5626C1FD0327B5D95CAE67E2A3A3AAF41EADBF49424FF6D923B2AAFD7E6504501F5CD9D6E28F4D4B88B13626C9F7FF3B494320B740B3A3B2408A5328A3C6EE1C95E7D63BCF721F9C4BF0B98FD700A9BD08470B1D55580C374AD099CB16E3010C5D6C0C9E12F4443C1DF801D58B162D3586FDDA2BCD27B2E62FC0A6532154A9532F051221C0C7E4C7060E1AB3FCD51A9426EE6EE4E431AC35F82647137A614F96C2D7677ECD97A844F4A7B908575D68580FE266EC7DDA6692D16D534CD5F999B0E8D9C02328CF31004BA9444B25FE6E93122127EEEE163D68D300D118D934B7A81DA09B

559AA2CE1C5199D44AEA6CC66901030028C4C1DD806A7B79BA0C19F5744A7087417D647B97B8D5E7032C99F0642F2B280D5EE35CAAA343FEDB9F1F22500C9B10FFFBC76268BF9C72173C8216B280A04BB442EF79DA1234521FD2838344B9B63664CE1D4044DBC53A485E85D6DD55C88D85BAFE8228B1AC9ACF9D4C4B3FBCC354F77AEF4F7AB907253D8F8B8B2B93BEF4A324C8E341508A8CADD7CA1067A0D5F5C353DC330EE140235C19FF73A6CD47A5EC04509C6F189195EF25F3B4A2BF61770F23223292E7DC3348701577D1E5E3D6E6C7695E5E052573F81AAD4937C7D382A03D7C4D89B759FB10912AA8865BBDDD2335DB282AB73C96F010E1E233DB114E51C7114DB202128B528A3504B456833D25186846E07D15A3DD14FE6E777682B527AEA8B88F40BD81FA4986A42DB9092986DCED7AF3C55C717B27FC8D0DF21E11269B65508CE9B5D8096A3E19079C27756B6874F5710B7CDA5E36A8317AECA9A359AFB9200475B9EDAA06417AD75248C068B57A7F88AD40C363ED311CDB24F972CAB1AD98B25ED731B09F45A463B85EC8E52AE43CFDF995C14E816EFD0B42A4726B88E395B02498462B2295E86E793014B3E7EE96EDB907D29652EAB962E4785D9DE415CB3ED224670CB67AB0017004F6B33EDFDD38CB023A86FAE5B4925C72436C9C6925190359364B309110537A41644B74C0C70184C48758515933EB016812C1528D85BFC5CC40C3D11E331C18A3A5BCEFF2A1EA2C9C7591959DCC272A980DF3108FF14C94ECC7DAD4009A2E61514E561B59034EF5F131A52617523C1A8012CEE6B8C0775B539A50D9EB68D219204477A0AF02B2660E18F334847D8681F616C1B3210BBF23974C9BE6F7F05C5793E5AEB3B9859EEEC36B62FB6608431758B349A6223124BDD36DB56836C2CEE322671E2F2EC6651749AE2D276D3AB77C2AD5284AD41279F3D5F594AFC8734389027EEB7DAD8990F6FD648D943F495F72AB6722BD209C76AB564081CB288E917A1422257A5059F3A6C0310F038BFADB91EA70250093E8D3165DE41BF9E47BBA41DD9B204635F8BD03A870DAB692978E6CC4BDADCD1D14F64139CDF3E5101DAB776BA01BBD682038416105EA508D2E599E0E37FCF50C23925CC04C94D396BF0C311C04E205AB34AD98C15700DCB0EFA57B6AD53B20FF6DD40F4F5990F0B858AFBC8E93CE8C689B92ECB0B815E94DF99716D19AC0B9FC3EB1D449BC571792F66E7E09456D6E5E4BA64368E5C0C46F5C3778BD0F39FD2E63EF3454D8F69D66C5FE796A677F6FD71617C50EB69DDE73272150C7337497540C77D82C05EECD47CE8FD4B4DB70E81E32234CD3C3BF98A1E514528DBE241266AACF2FE01ED1991A50E2AB94D382FE1C0A648DA9F051A23EF4BCA2F9E93501004E87D57FDC7B29C088284800AAD25FD97A205766877530D327B427C13B
82EC8E70E19448F37B912FE7ECAFA25CEA94638386858232D327C5009F5A3432DC8A4E2417D52373F4F6BC33AA4A1BB709F5E5550F3FC6B267D398F78585873BB0EBCCA94C7148D6F1BBF6566029B39898350F3D38B0D80898CBC230E2540B6B73A3E64ECF464408743ADA0D2BBE7BE6F83655B54C18B3818EC869D84BE0A0381BAEC548E388D03890A62C85BF936A2E04756EF6E6241D3F1447B6FC2A9B2EE9DE2E0B0F0E0F991EC98FCB76A05CFF485E3C487E53BAD428569CC6D6EF17CB89F383D4C772ABDB7D383A2E85A2BAEFE824B394F91E4029B222C388EC12A9AE530AB69A7C45D275E279CBB0E8B34DD675C9221E57BAEBBF5DE31B149664DC6AED84D18221EC19AFB4829F3568148CB51C799AB04E8B20E08956C6A90B6AADD8DD49AFD8D721BCF28613423127012961F5B95A199D7DE750890BE7799790893E37F594AD81F3A1B13579F04AF72BCB2CC608DD36667B10A26AF138ADB4B73DAEC7EE46FA97CB8F75F9C9B916F5A9894D9A888B462585131A292B79B26AB134B2433145B0F2F3C9AF14C0E5F7BD09F15A602BE3D7929A380395C780F8E3AB154EC2EDF3E79C08F384F90D53EC5906C2910469DDC0A415FDEBA913A9206F770F436707D841000AD701690393BC257F9E66CCA3118A2460BF3D407E6BA01124A6B9EBC0A63E6E2A8682F8F28B8D33D83B848EE9E45955DECC21E6B8A9C8D72F151A0B581CE20D3A89EC3D761364F2198FAF42299FC5A9C6D8B9C95AA2E417A8368A2E5D65B4A501A739045046A0797EE6790FE1BAD17B3C0722A971D0DF7C404DDC7E493B04B5669D936C137BCCF93922EE7B5E3BEA48C0757E8AC13178AB5627249D701B64AA57410E685BF960E2D9A875AA136C810CDD45D550047E8C753A22277ED59C28E96C6A262C13EB3AD5B25F6F4737B1F3C54B6D19B901FBC8BECD1908D89869C438BDFC847A116F79FBEF3985982EC83C4DE22AF5039DF1BA6FF710AF8FCBBF52BBAFEB18612431EE8C1CBC5CEB13DBB87E447AFF99765988FFE0BB57E027672E3E83DE3E0FACDE9182D93F3F450B2BD02E0EA59EC9F0CF5214EBEBC319CC7D1487A372EEC023ADCA9477E2EAB781B9D71015C46B8B69278DEA7C6FC9DAF2ED875240418D5EFEF45ED7FAEC70014AB7A8D192FCF263FB40F23F683F0ED32974640741815F2A54851EE30E01CA39B233E95C192E393F0DA9A8379B3E4613DFC996FB044D5554BD35F15D943BEC4152D9A78DC497D2C6E97AE7611E4CAACD1C9FDE1041916FACF43F9058B734BB364880DEFB912939B338CB073BA36FA32EA9CB396B55805D1E950ECD8AE9F558AEE6B2C5CBF1109B4ABC34A8BFA761CAB4F64FF415541ED11056E80CA89690D9EC0DC267024A52E022772DA5FA070E30EEC880905F9354976D7C1FACBA93A765968EE4F8D77A94F4DCD740CCDD24626021
E406DB573192B98EE7E6BE29654BC211884422C03C5F5F29C551A561D3F01794116D7D2E9F7221EF5EDFB9E1FC12E1032EB85ECB17DD2EC3EAD858CF4AF2E72F9F4BA2EE8B96F5F08535B44055C1FA32BC6AC5B63F05DB5FAFCF0419E2CCA367051349143BF04ACF7EE0067100B62B5FFCECA68E23EB8FA54EE9F59A9FA29BC83380BF5E88E379F9E1385244802B6CED023A38324F214D4116BFD3D9A81347AE4C0F01DC92EF4852A9D283AF459D43497A771E982EA5B21813212128944DECBEAFE833A34482DE8D47AC4E236DD7567F9BF13C94B3150ACF594E4E5F846DE66CBB53BB0AD1F5E4C8177E87BC8C9A2D2164D84F64A433AF2424A19BB1D78BA341F168D34047403DD9097DBCE78F0F57CDFF3F3815E2C84509C58919DAED9C6DA31CAD5740FDFE4A60D4DB4483D0718B0D7EA98207A5BED60715982947EF5F65F226D5DCBBF2033FBC922338130FA5E7578CC2E5A883809E7076C344FF815EFB932B961C2FE2C05BE51FB5295B8AB88D68EFCC6134C1BFCF099CA81449689DB75875FE00C7DF17F8DFE75A57C10D72B08C29F4C9D8CFF2BA2F3E2E7B7EF3C5A80C18C2035E1F66F9AEB8030D8E4F8D21A9723CAB7B54AB199631A7496D13B7EA531FB2489AED623107CF62C85C18AD3B09C69B08D7541A89C62C75AA231B3A9CB05653A2DDC4C51C06A2EB5D0BFD5547F1CEE12045268C41D26B0C55AC800872C4B067A1257762D522277EDF9A335BC65E952669A31DD35489852C8E9EE7CE308498651713D47DBACAECE14173F91D1DEE54C6DDD07AD859EF8DCB6AE13AAB9B96ADAA9607ED6FD01208B89B2FD719C22EB1A6E9B48C83E65C1286FB16A3093935FDE43565D12D326BBDAD7867869DFD2625AB816099FEBDECE1AD549350298447697298135A30A947D94A7831DB074901774017D1D9B706AB76753765A77251F06315FDE4D1497E41CE2082A832E7B62FCBC87F40A903C88612988761AD1E0AB435DEAB33AA4F49E64BC74A54AC2AD155CBA8E95C6E2ADB2084784FBE2EBD8CC9FFE84E97A1091CB7B628F090C8692519744AE2AC0F359777C6B780C843473FF31A933FD6C9DD598367BEEBA5AE06B1B44F87C05C6E7055E8D0108261CE1BF6657DA74D2F301847001A60301CAC42196A21DDE56D83DB09C7CF0C737CA23C7D98B11217C01894C3900CB8FF65370DC8F53B41C7A8FB42D36C9EBFA25821CE3E5D1E7E51FCD056B43CA1AD0F0D0AB20C4AD1573AB4FFA420
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 561 189 rc
85 118 m
1 118 l
1 68 l
85 68 l
h
85 118 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -530 5658 cm
615 5540 m
531 5540 l
531 5590 l
615 5590 l
h
615 5540 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
547.36798 5570.7759 m
(!"#$"%)[ 10.368000 8.592000 8.896000 9.488000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
129 118 m
85 118 l
85 68 l
129 68 l
h
129 118 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -530 5658 cm
659 5540 m
615 5540 l
615 5590 l
659 5590 l
h
659 5540 m
S
/Cs2 SC
0 sc
0 i
621.888 5561.5518 m
(&'\(\))[ 11.552000 9.776000 8.896000 0.000000 ] xS
627.672 5580 m
(*+,)[ 4.144000 5.328000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
560 118 m
476 118 l
476 68 l
560 68 l
h
560 118 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -530 5658 cm
1090 5540 m
1006 5540 l
1006 5590 l
1090 5590 l
h
1090 5540 m
S
/Cs2 SC
0 sc
0 i
1016.896 5570.7759 m
(-"."/0"%)[ 10.960000 8.592000 8.592000 8.592000 3.552000 8.000000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
476 118 m
432 118 l
432 68 l
476 68 l
h
476 118 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -530 5658 cm
1006 5540 m
962 5540 l
962 5590 l
1006 5590 l
h
1006 5540 m
S
/Cs2 SC
0 sc
0 i
968.888 5561.5518 m
(&'\(\))[ 11.552000 9.776000 8.896000 0.000000 ] xS
974.672 5580 m
(*+,)[ 4.144000 5.328000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
223 123 m
247 123 l
265 105 l
265 81 l
247 63 l
223 63 l
205 81 l
205 105 l
h
223 123 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -530 5658 cm
753 5535 m
777 5535 l
795 5553 l
795 5577 l
777 5595 l
753 5595 l
735 5577 l
735 5553 l
h
753 5535 m
S
/Cs2 SC
0 sc
0 i
740.71198 5570.7759 m
(!1/2.3)[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
646.63489 5592.2925 m
672.96204 5598.293 749.47131 5614 829 5614 c
927.30682 5614 984 5590 984 5590 c
S
0 i
CM
108.8484 67.560196 m
115.93669 62.789856 l
117.32555 68.6269 l
h
108.8484 67.560196 m
f
0 J
0 j
1 0 0 -1 -530 5658 cm
638.84839 5590.4399 m
645.93671 5595.21 l
647.32556 5589.373 l
h
638.84839 5590.4399 m
S
1 J
1 j
0.60000002 i
646.48474 5537.1641 m
673.14618 5529.5093 752.03931 5509 832 5509 c
930.30682 5509 984 5540 984 5540 c
S
0 i
CM
108.82037 118.5443 m
117.34449 117.96181 l
115.62566 123.71034 l
h
108.82037 118.5443 m
f
0 J
0 j
1 0 0 -1 -530 5658 cm
638.82037 5539.4556 m
647.34448 5540.0381 l
645.62567 5534.2896 l
h
638.82037 5539.4556 m
S
1 J
1 j
0.60000002 i
795 5565 m
952.09998 5565 l
S
0 i
CM
430.10001 93 m
422.10001 96 l
422.10001 90 l
h
430.10001 93 m
f
0 J
0 j
1 0 0 -1 -530 5658 cm
960.09998 5565 m
952.09998 5562 l
952.09998 5568 l
h
960.09998 5565 m
S
1 1 1 sc
CM
395 134 m
290 134 l
290 98 l
395 98 l
h
395 134 m
f
Q
/Cs2 SC
0 sc
q
290 98 105 36 rc
1 0 0 -1 -530 5658 cm
/F1.1[ 16 0 0 -16 0 0]sf
862.42798 5538.5518 m
(45\))[ 9.776000 10.368000 0.000000 ] xS
825.97198 5557 m
(67.89%"::;")[ 10.960000 8.592000 8.592000 8.304000 9.488000 5.040000 8.592000 8.000000 8.000000 8.896000 0.000000 ] xS
Q
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 561 189 rc
1 0 0 -1 -530 5658 cm
659 5565 m
735 5565 l
S
0 i
1 1 1 sc
CM
355 41 m
250 41 l
250 0 l
355 0 l
h
355 41 m
f
Q
/Cs2 SC
0 sc
0 i
q
250 0 105 41 rc
1 0 0 -1 -530 5658 cm
/F1.1[ 16 0 0 -16 0 0]sf
787.90002 5634.0518 m
(<"0/."\)\(=7$\))[ 11.264000 8.592000 8.000000 3.552000 8.592000 8.592000 4.448000 8.896000 9.184000 8.592000 9.488000 0.000000 ] xS
794.86798 5652.5 m
(5/>>?@7.8)[ 10.368000 3.552000 9.184000 9.184000 8.000000 9.488000 8.592000 8.592000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 561 189 rc
372 189 m
233 189 l
233 153 l
372 153 l
h
372 189 m
f
Q
/Cs2 SC
0 sc
q
233 153 139 36 rc
1 0 0 -1 -530 5658 cm
/F1.1[ 16 0 0 -16 0 0]sf
773.67603 5483.5518 m
(45\)67.89%"::;"\))[ 9.776000 10.368000 4.448000 10.960000 8.592000 8.592000 8.304000 9.488000 5.040000 8.592000 8.000000 8.000000 8.896000 8.592000 0.000000 ] xS
791.76398 5502 m
(A=2/B.72/=#)[ 11.552000 9.184000 5.040000 3.552000 8.288000 8.592000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
