%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 963.000000 371.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 12.6.1 (Build 21G217) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 963 371
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 963 371
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /C put
dup 34 /X put
dup 35 /L put
dup 36 /S put
dup 37 /w put
dup 38 /i put
dup 39 /t put
dup 40 /c put
dup 41 /h put
dup 42 /P put
dup 43 /U put
dup 44 /M put
dup 45 /e put
dup 46 /m put
dup 47 /A put
dup 48 /zero put
dup 49 /colon put
dup 50 /two put
dup 51 /one put
dup 52 /four put
dup 53 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




1C00E5001C00025D00BA0017001000032BB8001710BA0006002100032BB8000610B80000DCB8001010B80014DC303101332E0323220E0215141E0233323637230E0123222E0235343E02333216019F5805263B4D2C3D5C3D1E1F3D5B3B63730E5708473F283A241110253E2E3640015F2E432C152B4B653A3A61462668603C4220354424274938223600000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B6448285800010040000001EC02CA001A0051BA001A000000032BB8001A10BA000E000B00032BB8000E10B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000C2FBA0013000800032BB8001310BA001900010000111239303113113311343E0233321615113311342E0223220E02072311405513263927313855112A443317312D240A0202CAFD360124233B2C183830FEA201542A45321C0A1521180111000200450000009A02CA00030007002FBA0001000200032BB8000110B8000210B80004D0B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFDFB02050000010040000003150211002A00B7BA0003000000032BB8000310B8000DDC4103005F000D00015D4103008F000D00015D41030020000D00015D410300B0000D00015DB80010DCB80018DC4103008F001800015D4103005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C000000000100090000011D02A00017005BBA0001000200032BB8000110B8000210B80006D0B8000310B80007D0B8000210B80017DCB8000DD0B8000110B80014D000B800012FBA000F000C00032BB8000F10BA0004000500032BB8000410B80000D0B8000510B80015D030311335231523153311141E023B013523

00>] def
/CharStrings 22 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/colon 6 def
/A 7 def
/C 8 def
/L 9 def
/M 10 def
/P 11 def
/S 12 def
/U 13 def
/X 14 def
/c 15 def
/e 16 def
/h 17 def
/i 18 def
/m 19 def
/t 20 def
/w 21 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E0B8C08955DB50295DA0B1284D8D5B935DAA6F05584E2B8991A37722BF39D2C3FD5D959E56A8F552FE92EC544577FBFD6D926C3BB0F717A47EA7CE6F09DD15D4D13310F4CC197A1B1B50509BCA234B671C0941F2E7468BBB08FD2A04571822D80EEFACC09EF3F95D776666659E9F57F8971715C6C4D0827A9C8E5DF635A80C173EA9DE672CB5648AEADCBAE269F888EF0BF6F22ECB777C368F8C572306D6E830F6EFE93999A0145EDA1649B4CFEACA87E2D7481C0A319E21A7642A6B6FC671C474C5EE08DDA39E81BE646FE5A9B034D9C1416456106B4BA55A00B206BFB28F027D1C037B2777FEE3961E2AE9A77FAF7CCE68A2FB22984E7A0C22AEF7049FFB942CD75C7AEFC6EE487CFD273675427318B44FD60A9ED9E61B164AA95799A6CE92E521A7995D76A3FF35F5F11BFE5F3A116E8F65CB71F254C36F52FF58EAED55322BF73186AA693918F0B6AB004F1F795B95C4AA9CF04EFFEA7B1959E6DC7AFD5E7DE87E9CA9CDF9A13C517010601E07264C8D183884A64A2CE310424E4F4359A695E363539712B4FC9E9176DED0D28A6BB6A24D7EE064F945C0F231D3AB25E0A0598B436C69E59B47F23DA50CD51554789AAA522CCEDC7B1FDEEB817CCBDA08FB0F76BC79B52FE728165E0D5012988DCFD2A4E3E7893D51BB428B036357617CBB1DA83E6EF464CCA91A175E427B7B8AD7315C579151E6167C0F97B5762D946F6244D5AF3F28F53C0E7B8D8C9BA85295956E619BE1BEFCBCEB776F90671C27F844472009
97DD9309135EA8DA6BEF4BD712F1F4FCB653BD008F60EAC20BD8140A63CCFF787A35E84274077D792425DE3B964178F9204B778E426F890E67DD38784B0205A039494F6C3028DC8568538F56CD258ACEB674595DCF6ABF960E76C3F549DC9D4F898E823AC170D9EC009861312C1C5E8342B53B6678369FFFEEB6BE57BF3A14F7570CDCEBA908C30FB1394F32E53A006F6D8D2915584ACBD4EFEE8B0DBB0250FD5166FDC00878C2A813747D6CB1D036B0EEB09A256A3FFBCF3B72237A7E1CB2AEF6AC4EE16918E72C4B64986054CAF3D0F2EE1A837D720C726CFA994A28A96A74D29DA880C621A188BB25D790354DC43FC29D6E15A36FEAFAAB39DCBCBD0FAC2D4A9BBD19707BA1A374FDD672366F17BB0AFD2B46B0B5093A9A0C5D3B11746483BE2F0088D09D664ADFB605C9D01EB95A269F0EDE58CFE606655F254EDFB6CD75BAD5B0E36EA67546FA18F19F19EBDAE5009F179964DBED39DC4A15E8EF589CBC9A9EDD0EBCC5B579D3D564C3B39FC4F66058723C6ACF836BCC31B89DDEA12644D21E94943DBBED14EBD50AFF4F4DC9144E24CF20850BEC6DF1C804B6F69054B13F4AEA2F658648A20951AA16C0C9C9C86E5E5C7422E74243DA5D2E97754A895509D4AF8C2151D7BA661C2694327361B4D46B7060279ACC756C96BE3C8A03126E9F34C3A3AA53B4B472743D988F0ADAFC0B96B686C48B56ECEF478D5EA05C088F5FA667AD48A5A631ACB883473F7B75D86688D96F96ACCDF18D0FBFAA559977075A7BE0E388992EAAD0144ADB13A7905CD6813C843FA279783CCBA859CD97A2D2FB93D53A723D8035A3419650527F652812FE5237D3F5E3B861ECB9CD09C7D472F020B2E8923B5497EF4AAFF4CC858AB5BC746CC9E5B0A35097ECB64E57B701F5DFC700AF22835318265173306830C5E068425CCD8B2141083A0FF2675B8CDAA2C9F158C7B86A92D7EF210ADD68B2C4A42B6017C49C187E7A35A7AEDF0BCAB46051C08AA89FEB970DA788D6B8B8300250216E315B8A5791FC33BE4450154232B97C2C1FFEAB37779AEE8E1536B8EAF4671D8C58D4134F7D01320DF2CBCB3BE11BA19D3B72E149B7EB20FE7E8E8EF370F5B5CA95ACFAE6E20D01333E6AD91ECB612A62D37CFC301D4803E4523811AD5E8EC9531B9C3A75644E1047C8A82F74B09087EE1C224524EAA1E76CFAEBBC58B8C991A609C18A9BD952C2627264B2244DB7FA5C839797F581CBF1A2DC5561D46B8C8A7162454BD9140DD50BB3B23C6D2E07714543AFBDC949D35FBC8D600B034F35A9C9918831418B2D91BDD682428E552197B781E2FA5CEC9563844F0A5AE841B9EDFE083443D23612E30F5858493972838D2B8E98941DC2817551C5E5D0A960B7D86F05CCFC81DCE48C155FC4769FF868F65D8F0B7140F4F127463D03487D427EA2855AFEC10F57AC49E1AE274F84AB2C
92355DC54017B19BEDCB4DE2698626130E56161E74E2FB072E44D537438CAF0F781246AB6455A2F5FF014A93120F75C1E8E52B2B78137AA50848A342F7D9D211860D1AF9C928050E91E125838A159DAE5C9C04D1EB073A0EC449C293883A850782C822D5B9F0D4D7855CC1C63960FD5E2F00D67E77910CE0D9E066C29C3A6899159D7D333A6E19536F204E8E1C294A7E70623A558554A7C3D9C3C568E960A354B42CE151E7CE1AE769373D978DF1B9290EFE01DD7F843D8A4394C5FF89E729C69EE4571FA09BA7305EC50DC4ACB65E6AAB9EBABDFC2A54F8740277F12C0A3D431FCA03F37C10339E1835A7F3E372E463F8A27A626C8E983E6009800AC598D5279D54859EEA6EC6F66D0B5D8DECAE5BDD8AADC1BEAC3B1EC7916BF81887D33623FE3D1281A704B5938F946C38FF2E684B585B85008C69F5E35E313BBE52163CCB7DADB7792C787B5F2A08DDF9DFCE1DBC4BD3A44851C3563D259071F8006956DCF21286D30D67BAACCFC4BA12D774C470A0FE50EE691EC23626FEB64B455ADD5CF75BC9B458A3DAE9400D60AFF6CBB5AA83F5DF9CA32787F79F44CE7438811D7809718393BDD33E5957D23A9458CD65D1118928E7B715E2DC8C2B662624FC7D912F9991829EEEF9AC49F5B328C9E1291D75A9B48E3597C052FBBB31F3B94F9D5B34A53225B93A97364132B0AC7089D8EBE3D1A10F0B5C5546A06E2915458F0819A610ACEFA63D6546BE8747C1E82D2F788966E56DAEA85F1F4D39950C2D2241BE5D0FBE31C181FA080DA5A73FE4089E3136ECFAB21F12888AAF10119C64205B002F64ED349CF479EF6CA5B02C401D16777150CFE16C36FD26DC4378489CC848229439E65210189AEB3C70F7E594CC3B51763B40DA099CEAD220BBDA28171E1AA3EB2BE22F3D79E28D7C9CF367F1D9C2A36C254A6B496C66430ECEA66F0EF3F4547D8638269ADD58B12B1D728EE5EB5C07F528FCE2F1D3C43BF3E0EA787ADE736596C01B1FD2A60EEDAAFA89E34A1FC1E82C80A396CD1CAED360D08747DA50010F42172121BD131A70CD11730328F370FD6E6D83A62456BBDC553AE618DB92B89A55F12FA8F655DF24C32B380B4E81A06E8AA12BBD1E3317EA9A0A3472C2BF4BF3CC054FECDD48BF1D3B862CC598D8890D0F67A101008FC1CE75E9280D25FDAC25D964B451649A12EADF382C95CF3AB1FAD8DAEDDEBAE0D4B6A7F3B62F43C2EAAD557E1C31CDAD71CCDF3CFD3C23266604FA4DBB29FEF127302E0E1590C2377BAF99F4F7070D088982E460B19A7CBD62AD95860EB8CC1CF750CF0BF268520EED3173B09E52AA94CFBAB82F8B94A8B0DD003A076ECD09AA2F5CB6245CC6068BCB955840DCE9EF560E82DA735472879DAA582DF0A79BD44F8A9622F704739BD25BC0DCD89466A9911F4E96CF76448863FA283310D81DCE59125DF22A0E7B7B048413
2A4A9005B256340915EE22452076F8A078158656AB3BC1519ABEEF749DC8B3400592A9FDA20F95E898298952B0F7067A829EE50C419E939B39A0693EF80E5BDE200D0061021C9C2C915AA88F5794DA4A48CC922E331DE936FE22B3D611FB050596FC0D4B1D7178D13540A66438EA357806CB5EAF6358D3A515596B8209BDF4EAE251D48ED2F34C49345466F31AB53A40D3E4B72567AA04D092B895B5F2A5D863CFB069FABD7E0D5349792B0D668DF79B5345005A3D15474147D06E373CA7C86700FC9190758D76933AE16309C745A7EB28387E19E955181E4F9E1C631D91E54ECFB28B9C3EEF8A69CABCBBAF5DF4C2761EC19CB57E86DA2F4A25DEF3F6FC9BA1A7CE89D48EF0B3004FA3A66A758321FAB873F373DDD1255E14126491CD591D916FA628F9D9C27C1A9C64ECD540967E5124C2263B770E4C21E660C087F3FC268D2D5079EBF8C7FCE22E58E315583E167CA9BF270635F84F4BD017D0E976561D0E352F98036C3C1D75887089967EB6A89D8B58F29990A23FBAD7F65497724055BAE6B9CFAC7DE1B9635F5CCB0DB0348BD1F543D6467C3A00C0FEAC42D5DC16F0EE10523A6FAC6BE9F54AC19F34C0E22ECFD94FB7D52335017D4BBB6D4FC9016F7B116C1EB839DB14FAB2F3D455FA82AD814DB650256C0A0C874E749C395DD04A861E1DC243AD77B054D6F53FD323F21A31B22819B24DCE3C53ABEA6C3CE16F4985B614E7BBBFCB709F6F26679E96DA765F0A4BDBC480984908C2909AFD12D21E396CA6105D7A96307E56995EC1FD2353658EA674A0A53A24D676E333556CEFDAEDFF3631CC230CBA87E9E1B6215D823A5A6674D0CF125FFBDE148CA0CFDF48FD51255FEF18429E911649CF96693AF8B92FF6B277E72D8BCF4E48AECC7205C1064A0915C2F44CBC2CFB97AAFB893AB8209EA84C72B9966F20818E8C5EBA10A7CBC5F610764952C402B43C643EB36BE1CBC523AB5AB0FD17DF383C4D1CE1B1F0D498B481FBD9C317FED5CB804A166B67F85B995E69A20710876F90F0D9EDE82933C9B58FB6B2B4B8FA7EE5FD089C07034CCAEB093B3E635376E37DE1A8ED9DFEAC4EF458F3408DAAA1F307ADDF86B1C3E4C459B1C53656E07F106A167611638CA5C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 963 371 rc
33.5 160 m
57.5 160 l
75.5 142 l
75.5 118 l
57.5 100 l
33.5 100 l
15.5 118 l
15.5 142 l
h
33.5 160 m
f
1 J
1 j
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-529.5 5643 m
-505.5 5643 l
-487.5 5661 l
-487.5 5685 l
-505.5 5703 l
-529.5 5703 l
-547.5 5685 l
-547.5 5661 l
h
-529.5 5643 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-532.612 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-541.78802 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
50 81.5 m
1 81.5 l
1 31.5 l
50 31.5 l
h
50 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-513 5721.5 m
-562 5721.5 l
-562 5771.5 l
-513 5771.5 l
h
-513 5721.5 m
S
/Cs2 SC
0 sc
0 i
-554.23602 5752.2759 m
(!*+)[ 11.552000 10.368000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-517.5 5703 m
-537.5 5721.5 l
S
0 i
1 1 1 sc
CM
33.5 244 m
57.5 244 l
75.5 226 l
75.5 202 l
57.5 184 l
33.5 184 l
15.5 202 l
15.5 226 l
h
33.5 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-529.5 5559 m
-505.5 5559 l
-487.5 5577 l
-487.5 5601 l
-505.5 5619 l
-529.5 5619 l
-547.5 5601 l
-547.5 5577 l
h
-529.5 5559 m
S
/Cs2 SC
0 sc
0 i
-532.612 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-541.78802 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
105.5 81.5 m
56.5 81.5 l
56.5 31.5 l
105.5 31.5 l
h
105.5 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-457.5 5721.5 m
-506.5 5721.5 l
-506.5 5771.5 l
-457.5 5771.5 l
h
-457.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
-500.08801 5752.2759 m
(,-.)[ 13.936000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-517.5 5703 m
-482 5721.5 l
S
-517.5 5619 m
-517.5 5643 l
S
0 i
1 1 1 sc
CM
159 160 m
183 160 l
201 142 l
201 118 l
183 100 l
159 100 l
141 118 l
141 142 l
h
159 160 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-404 5643 m
-380 5643 l
-362 5661 l
-362 5685 l
-380 5703 l
-404 5703 l
-422 5685 l
-422 5661 l
h
-404 5643 m
S
/Cs2 SC
0 sc
0 i
-407.112 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-416.28799 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
172.5 81.5 m
123.5 81.5 l
123.5 31.5 l
172.5 31.5 l
h
172.5 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-390.5 5721.5 m
-439.5 5721.5 l
-439.5 5771.5 l
-390.5 5771.5 l
h
-390.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
-428.776 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-392 5703 m
-415 5721.5 l
S
0 i
1 1 1 sc
CM
159 244 m
183 244 l
201 226 l
201 202 l
183 184 l
159 184 l
141 202 l
141 226 l
h
159 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-404 5559 m
-380 5559 l
-362 5577 l
-362 5601 l
-380 5619 l
-404 5619 l
-422 5601 l
-422 5577 l
h
-404 5559 m
S
/Cs2 SC
0 sc
0 i
-407.112 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-416.28799 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-392 5619 m
-392 5643 l
S
-392 5643 m
-517.5 5619 l
S
-392 5619 m
-517.5 5643 l
S
0 i
1 1 1 sc
CM
283.5 370 m
307.5 370 l
325.5 352 l
325.5 328 l
307.5 310 l
283.5 310 l
265.5 328 l
265.5 352 l
h
283.5 370 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-279.5 5433 m
-255.5 5433 l
-237.5 5451 l
-237.5 5475 l
-255.5 5493 l
-279.5 5493 l
-297.5 5475 l
-297.5 5451 l
h
-279.5 5433 m
S
/Cs2 SC
0 sc
0 i
-282.612 5459.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-291.78799 5478 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
409.5 370 m
433.5 370 l
451.5 352 l
451.5 328 l
433.5 310 l
409.5 310 l
391.5 328 l
391.5 352 l
h
409.5 370 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-153.5 5433 m
-129.5 5433 l
-111.5 5451 l
-111.5 5475 l
-129.5 5493 l
-153.5 5493 l
-171.5 5475 l
-171.5 5451 l
h
-153.5 5433 m
S
/Cs2 SC
0 sc
0 i
-156.612 5459.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-165.78799 5478 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
521 370 m
545 370 l
563 352 l
563 328 l
545 310 l
521 310 l
503 328 l
503 352 l
h
521 370 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-42 5433 m
-18 5433 l
0 5451 l
0 5475 l
-18 5493 l
-42 5493 l
-60 5475 l
-60 5451 l
h
-42 5433 m
S
/Cs2 SC
0 sc
0 i
-45.112 5459.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-54.287998 5478 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
646.5 370 m
670.5 370 l
688.5 352 l
688.5 328 l
670.5 310 l
646.5 310 l
628.5 328 l
628.5 352 l
h
646.5 370 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
83.5 5433 m
107.5 5433 l
125.5 5451 l
125.5 5475 l
107.5 5493 l
83.5 5493 l
65.5 5475 l
65.5 5451 l
h
83.5 5433 m
S
/Cs2 SC
0 sc
0 i
80.388 5459.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
71.211998 5478 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
135.5 229.5 m
81 229.5 l
81 198.5 l
135.5 198.5 l
h
135.5 229.5 m
f
Q
/Cs2 SC
0 sc
q
81 198.5 54.5 31 rc
1 0 0 -1 563 5803 cm
/F1.1[ 20 0 0 -20 0 0]sf
-476.98999 5599.9399 m
(01213)[ 11.120000 5.560000 11.120000 5.560000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 963 371 rc
55.5 31.5 m
1 31.5 l
1 0.5 l
55.5 0.5 l
h
55.5 31.5 m
f
Q
/Cs2 SC
0 sc
q
1 0.5 54.5 31 rc
1 0 0 -1 563 5803 cm
/F1.1[ 20 0 0 -20 0 0]sf
-556.98999 5797.9399 m
(01012)[ 11.120000 5.560000 11.120000 5.560000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 963 371 rc
381 355.5 m
326.5 355.5 l
326.5 324.5 l
381 324.5 l
h
381 355.5 m
f
Q
/Cs2 SC
0 sc
q
326.5 324.5 54.5 31 rc
1 0 0 -1 563 5803 cm
/F1.1[ 20 0 0 -20 0 0]sf
-231.49001 5473.9399 m
(41313)[ 11.120000 5.560000 11.120000 5.560000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 963 371 rc
261 145.5 m
206.5 145.5 l
206.5 114.5 l
261 114.5 l
h
261 145.5 m
f
Q
/Cs2 SC
0 sc
q
206.5 114.5 54.5 31 rc
1 0 0 -1 563 5803 cm
/F1.1[ 20 0 0 -20 0 0]sf
-351.48999 5683.9399 m
(01313)[ 11.120000 5.560000 11.120000 5.560000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 963 371 rc
232.75 31.5 m
178.25 31.5 l
178.25 0.5 l
232.75 0.5 l
h
232.75 31.5 m
f
Q
/Cs2 SC
0 sc
q
178.25 0.5 54.5 31 rc
1 0 0 -1 563 5803 cm
/F1.1[ 20 0 0 -20 0 0]sf
-379.73999 5797.9399 m
(01315)[ 11.120000 5.560000 11.120000 5.560000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 963 371 rc
135.5 145.5 m
81 145.5 l
81 114.5 l
135.5 114.5 l
h
135.5 145.5 m
f
Q
/Cs2 SC
0 sc
q
81 114.5 54.5 31 rc
1 0 0 -1 563 5803 cm
/F1.1[ 20 0 0 -20 0 0]sf
-476.98999 5683.9399 m
(01013)[ 11.120000 5.560000 11.120000 5.560000 0.000000 ] xS
Q
/Cs1 SC
1 1 1 sc
q
0 0 963 371 rc
230 81.5 m
181 81.5 l
181 31.5 l
230 31.5 l
h
230 81.5 m
f
1 J
1 j
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-333 5721.5 m
-382 5721.5 l
-382 5771.5 l
-333 5771.5 l
h
-333 5721.5 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-371.276 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-357.5 5721.5 m
-392 5703 l
S
0 i
1 1 1 sc
CM
283.5 160 m
307.5 160 l
325.5 142 l
325.5 118 l
307.5 100 l
283.5 100 l
265.5 118 l
265.5 142 l
h
283.5 160 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-279.5 5643 m
-255.5 5643 l
-237.5 5661 l
-237.5 5685 l
-255.5 5703 l
-279.5 5703 l
-297.5 5685 l
-297.5 5661 l
h
-279.5 5643 m
S
/Cs2 SC
0 sc
0 i
-282.612 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-291.78799 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
300 81.5 m
251 81.5 l
251 31.5 l
300 31.5 l
h
300 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-263 5721.5 m
-312 5721.5 l
-312 5771.5 l
-263 5771.5 l
h
-263 5721.5 m
S
/Cs2 SC
0 sc
0 i
-304.23599 5752.2759 m
(!*+)[ 11.552000 10.368000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-267.5 5703 m
-287.5 5721.5 l
S
0 i
1 1 1 sc
CM
283.5 244 m
307.5 244 l
325.5 226 l
325.5 202 l
307.5 184 l
283.5 184 l
265.5 202 l
265.5 226 l
h
283.5 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-279.5 5559 m
-255.5 5559 l
-237.5 5577 l
-237.5 5601 l
-255.5 5619 l
-279.5 5619 l
-297.5 5601 l
-297.5 5577 l
h
-279.5 5559 m
S
/Cs2 SC
0 sc
0 i
-282.612 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-291.78799 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
355.5 81.5 m
306.5 81.5 l
306.5 31.5 l
355.5 31.5 l
h
355.5 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-207.5 5721.5 m
-256.5 5721.5 l
-256.5 5771.5 l
-207.5 5771.5 l
h
-207.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
-250.088 5752.2759 m
(,-.)[ 13.936000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-267.5 5703 m
-232 5721.5 l
S
-267.5 5619 m
-267.5 5643 l
S
0 i
1 1 1 sc
CM
409 160 m
433 160 l
451 142 l
451 118 l
433 100 l
409 100 l
391 118 l
391 142 l
h
409 160 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-154 5643 m
-130 5643 l
-112 5661 l
-112 5685 l
-130 5703 l
-154 5703 l
-172 5685 l
-172 5661 l
h
-154 5643 m
S
/Cs2 SC
0 sc
0 i
-157.112 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-166.28799 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
422.5 81.5 m
373.5 81.5 l
373.5 31.5 l
422.5 31.5 l
h
422.5 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-140.5 5721.5 m
-189.5 5721.5 l
-189.5 5771.5 l
-140.5 5771.5 l
h
-140.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
-178.776 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-142 5703 m
-165 5721.5 l
S
0 i
1 1 1 sc
CM
409 244 m
433 244 l
451 226 l
451 202 l
433 184 l
409 184 l
391 202 l
391 226 l
h
409 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-154 5559 m
-130 5559 l
-112 5577 l
-112 5601 l
-130 5619 l
-154 5619 l
-172 5601 l
-172 5577 l
h
-154 5559 m
S
/Cs2 SC
0 sc
0 i
-157.112 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-166.28799 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-142 5619 m
-142 5643 l
S
-142 5643 m
-267.5 5619 l
S
-142 5619 m
-267.5 5643 l
S
0 i
1 1 1 sc
CM
480 81.5 m
431 81.5 l
431 31.5 l
480 31.5 l
h
480 81.5 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-83 5721.5 m
-132 5721.5 l
-132 5771.5 l
-83 5771.5 l
h
-83 5721.5 m
S
/Cs2 SC
0 sc
0 i
-121.276 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-107.5 5721.5 m
-142 5703 l
S
0 i
1 1 1 sc
CM
521 160 m
545 160 l
563 142 l
563 118 l
545 100 l
521 100 l
503 118 l
503 142 l
h
521 160 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-42 5643 m
-18 5643 l
0 5661 l
0 5685 l
-18 5703 l
-42 5703 l
-60 5685 l
-60 5661 l
h
-42 5643 m
S
/Cs2 SC
0 sc
0 i
-45.112 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-54.287998 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
537.5 81.5 m
488.5 81.5 l
488.5 31.5 l
537.5 31.5 l
h
537.5 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-25.5 5721.5 m
-74.5 5721.5 l
-74.5 5771.5 l
-25.5 5771.5 l
h
-25.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
-66.736 5752.2759 m
(!*+)[ 11.552000 10.368000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-30 5703 m
-50 5721.5 l
S
0 i
1 1 1 sc
CM
521 244 m
545 244 l
563 226 l
563 202 l
545 184 l
521 184 l
503 202 l
503 226 l
h
521 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
-42 5559 m
-18 5559 l
0 5577 l
0 5601 l
-18 5619 l
-42 5619 l
-60 5601 l
-60 5577 l
h
-42 5559 m
S
/Cs2 SC
0 sc
0 i
-45.112 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
-54.287998 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
593 81.5 m
544 81.5 l
544 31.5 l
593 31.5 l
h
593 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
30 5721.5 m
-19 5721.5 l
-19 5771.5 l
30 5771.5 l
h
30 5721.5 m
S
/Cs2 SC
0 sc
0 i
-12.588 5752.2759 m
(,-.)[ 13.936000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
-30 5703 m
5.5 5721.5 l
S
-30 5619 m
-30 5643 l
S
0 i
1 1 1 sc
CM
646.5 160 m
670.5 160 l
688.5 142 l
688.5 118 l
670.5 100 l
646.5 100 l
628.5 118 l
628.5 142 l
h
646.5 160 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
83.5 5643 m
107.5 5643 l
125.5 5661 l
125.5 5685 l
107.5 5703 l
83.5 5703 l
65.5 5685 l
65.5 5661 l
h
83.5 5643 m
S
/Cs2 SC
0 sc
0 i
80.388 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
71.211998 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
660 81.5 m
611 81.5 l
611 31.5 l
660 31.5 l
h
660 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
97 5721.5 m
48 5721.5 l
48 5771.5 l
97 5771.5 l
h
97 5721.5 m
S
/Cs2 SC
0 sc
0 i
58.723999 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
95.5 5703 m
72.5 5721.5 l
S
0 i
1 1 1 sc
CM
646.5 244 m
670.5 244 l
688.5 226 l
688.5 202 l
670.5 184 l
646.5 184 l
628.5 202 l
628.5 226 l
h
646.5 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
83.5 5559 m
107.5 5559 l
125.5 5577 l
125.5 5601 l
107.5 5619 l
83.5 5619 l
65.5 5601 l
65.5 5577 l
h
83.5 5559 m
S
/Cs2 SC
0 sc
0 i
80.388 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
71.211998 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
95.5 5619 m
95.5 5643 l
S
95.5 5643 m
-30 5619 l
S
95.5 5619 m
-30 5643 l
S
0 i
1 1 1 sc
CM
717.5 81.5 m
668.5 81.5 l
668.5 31.5 l
717.5 31.5 l
h
717.5 81.5 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
154.5 5721.5 m
105.5 5721.5 l
105.5 5771.5 l
154.5 5771.5 l
h
154.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
116.224 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
130 5721.5 m
95.5 5703 l
S
0 i
1 1 1 sc
CM
766 160 m
790 160 l
808 142 l
808 118 l
790 100 l
766 100 l
748 118 l
748 142 l
h
766 160 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
203 5643 m
227 5643 l
245 5661 l
245 5685 l
227 5703 l
203 5703 l
185 5685 l
185 5661 l
h
203 5643 m
S
/Cs2 SC
0 sc
0 i
199.888 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
190.71201 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
782.5 81.5 m
733.5 81.5 l
733.5 31.5 l
782.5 31.5 l
h
782.5 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
219.5 5721.5 m
170.5 5721.5 l
170.5 5771.5 l
219.5 5771.5 l
h
219.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
178.26401 5752.2759 m
(!*+)[ 11.552000 10.368000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
215 5703 m
195 5721.5 l
S
0 i
1 1 1 sc
CM
766 244 m
790 244 l
808 226 l
808 202 l
790 184 l
766 184 l
748 202 l
748 226 l
h
766 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
203 5559 m
227 5559 l
245 5577 l
245 5601 l
227 5619 l
203 5619 l
185 5601 l
185 5577 l
h
203 5559 m
S
/Cs2 SC
0 sc
0 i
199.888 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
190.71201 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
838 81.5 m
789 81.5 l
789 31.5 l
838 31.5 l
h
838 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
275 5721.5 m
226 5721.5 l
226 5771.5 l
275 5771.5 l
h
275 5721.5 m
S
/Cs2 SC
0 sc
0 i
232.412 5752.2759 m
(,-.)[ 13.936000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
215 5703 m
250.5 5721.5 l
S
215 5619 m
215 5643 l
S
0 i
1 1 1 sc
CM
891.5 160 m
915.5 160 l
933.5 142 l
933.5 118 l
915.5 100 l
891.5 100 l
873.5 118 l
873.5 142 l
h
891.5 160 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
328.5 5643 m
352.5 5643 l
370.5 5661 l
370.5 5685 l
352.5 5703 l
328.5 5703 l
310.5 5685 l
310.5 5661 l
h
328.5 5643 m
S
/Cs2 SC
0 sc
0 i
325.388 5669.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
316.21201 5688 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
905 81.5 m
856 81.5 l
856 31.5 l
905 31.5 l
h
905 81.5 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
342 5721.5 m
293 5721.5 l
293 5771.5 l
342 5771.5 l
h
342 5721.5 m
S
/Cs2 SC
0 sc
0 i
303.724 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
340.5 5703 m
317.5 5721.5 l
S
0 i
1 1 1 sc
CM
891.5 244 m
915.5 244 l
933.5 226 l
933.5 202 l
915.5 184 l
891.5 184 l
873.5 202 l
873.5 226 l
h
891.5 244 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
328.5 5559 m
352.5 5559 l
370.5 5577 l
370.5 5601 l
352.5 5619 l
328.5 5619 l
310.5 5601 l
310.5 5577 l
h
328.5 5559 m
S
/Cs2 SC
0 sc
0 i
325.388 5585.5518 m
(!"#)[ 11.552000 9.776000 0.000000 ] xS
316.21201 5604 m
($%&'\(\))[ 10.368000 12.128000 3.552000 5.040000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
340.5 5619 m
340.5 5643 l
S
340.5 5643 m
215 5619 l
S
340.5 5619 m
215 5643 l
S
0 i
1 1 1 sc
CM
962.5 81.5 m
913.5 81.5 l
913.5 31.5 l
962.5 31.5 l
h
962.5 81.5 m
f
1 w
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 563 5803 cm
399.5 5721.5 m
350.5 5721.5 l
350.5 5771.5 l
399.5 5771.5 l
h
399.5 5721.5 m
S
/Cs2 SC
0 sc
0 i
361.224 5752.2759 m
(/\(\()[ 10.368000 8.592000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
375 5721.5 m
340.5 5703 l
S
-266.5 5494 m
-517.5 5559 l
S
-141.5 5493 m
-517.5 5559 l
S
-30 5493 m
-392 5559 l
S
95.5 5493 m
-391 5560 l
S
-267.5 5493 m
-267.5 5559 l
S
-141.5 5493 m
-267.5 5559 l
S
-30 5493 m
-142 5559 l
S
97 5494 m
-141 5560 l
S
-266.5 5494 m
-30 5559 l
S
-141.5 5493 m
-29 5560 l
S
95.5 5493 m
95.5 5559 l
S
-30 5493 m
96.5 5560 l
S
-267.5 5493 m
215 5559 l
S
-141.5 5493 m
215 5559 l
S
95.5 5493 m
340.5 5559 l
S
-30 5493 m
340.5 5559 l
S
ep
end
%%Trailer
%%EOF
